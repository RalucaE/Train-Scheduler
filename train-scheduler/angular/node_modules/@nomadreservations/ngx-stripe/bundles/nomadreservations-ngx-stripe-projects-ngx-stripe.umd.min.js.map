{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/interfaces/sources.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/interfaces/stripe.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/interfaces/token.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/services/platform.service.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/services/document-ref.service.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/services/window-ref.service.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/services/api-loader.service.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/services/stripe.service.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/payment-request.component.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/stripe-card.component.ts","ng://@nomadreservations/ngx-stripe/projects/ngx-stripe/lib/ngx-stripe.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","isSourceData","sourceData","STRIPE_PUBLISHABLE_KEY","InjectionToken","STRIPE_OPTIONS","isBankAccount","account","isBankAccountData","bankAccountData","account_holder_type","isPii","pii","isPiiData","piiData","PlatformService","platformId","isPlatformBrowser","isPlatformServer","Inject","args","PLATFORM_ID","Injectable","tslib_1.__param","DocumentRef","_platform","getNativeDocument","isBrowser","document","WindowRef","getNativeWindow","window","LazyStripeAPILoader","status","BehaviorSubject","loaded","loading","asStream","load","asObservable","isReady","getValue","_this","isServer","script","createElement","type","async","defer","src","onload","onerror","body","appendChild","StripeService","options","loader","stripeChanged$","ReplaySubject","stripe","changeKey","pipe","take","subscribe","obs","filter","map","Stripe","publishLast","refCount","elements","createToken","a","b","observableFrom","paymentRequest","handleCardSetup","clientSecret","element","cardSetupOptions","handleCardPayment","handleCardAction","confirmPaymentIntent","intentOptions","confirmCardPayment","data","retrievePaymentIntent","retrieveSetupIntent","confirmSetupIntent","createSource","retrieveSource","source","createPaymentMethod","paymentMethod","PaymentRequestComponent","stripeService","change","EventEmitter","shippingAddressChange","shippingOptionChange","cancel","hide","styles$","options$","elementsOptions$","complete$","Subject","_attached","_opened","optionsIn","success","ngOnInit","elements$","switchMap","request$","complete","lastEvent","ngAfterViewInit","combineLatest","_a","_b","styles","requestButton","_paymentRequest","element_1","create","style","paymentRequestButton","canMakePayment","then","result","mount","nativeElement","on","event","emit","update","currency","total","displayItems","shippingOptions","tslib_1.__decorate","Input","Output","ViewChild","static","ElementRef","Component","selector","template","StripeCardComponent","elementTypes","keys","observableCombineLatest","Boolean","_c","card","indexOf","cardElement","mountTo","querySelector","changedCard","isComplete","elementType","_complete","concat","__spread","_d","tslib_1.__values","_e","getCard","Array","NgxStripeModule","forRoot","publishableKey","ngModule","NgxStripeModule_1","providers","provide","useValue","NgModule","imports","CommonModule","declarations","exports"],"mappings":";;;;;;;;;;;;;;oFA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAezB,SAASQ,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HC,EAAvHC,EAAId,UAAUC,OAAQc,EAAID,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOlB,OAAOsB,yBAAyBN,EAAQC,GAAOC,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAId,EAAIW,EAAWR,OAAS,EAAGH,GAAK,EAAGA,KAASe,EAAIJ,EAAWX,MAAIiB,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAEH,EAAQC,EAAKI,GAAKF,EAAEH,EAAQC,KAASI,GAChJ,OAAOD,EAAI,GAAKC,GAAKrB,OAAOyB,eAAeT,EAAQC,EAAKI,GAAIA,EAGzD,SAASK,EAAQC,EAAYC,GAChC,OAAO,SAAUZ,EAAQC,GAAOW,EAAUZ,EAAQC,EAAKU,IAGpD,SAASE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GA4C7G,SAASE,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWjC,EAAI,EAChE,OAAI+B,EAAUA,EAAExB,KAAKuB,GACd,CACHI,KAAM,WAEF,OADIJ,GAAK9B,GAAK8B,EAAE3B,SAAQ2B,OAAI,GACrB,CAAEK,MAAOL,GAAKA,EAAE9B,KAAMoC,MAAON,KAKzC,SAASO,EAAOP,EAAG7B,GACtB,IAAI8B,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYqB,EAA3BtC,EAAI+B,EAAExB,KAAKuB,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANtC,GAAgBA,KAAM,MAAQgB,EAAIjB,EAAEkC,QAAQE,MAAMG,EAAGC,KAAKvB,EAAEkB,OAExE,MAAOM,GAASH,EAAI,CAAEG,MAAOA,GACjC,QACQ,IACQxB,IAAMA,EAAEmB,OAASL,EAAI/B,EAAU,SAAI+B,EAAExB,KAAKP,GAE1D,QAAkB,GAAIsC,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,WCxDKG,EAAaC,GAC3B,MAAO,SAAUA,MCxDNC,EAAyB,IAAIC,EAAAA,eAAuB,0BACpDC,EAAiB,IAAID,EAAAA,eAAwB,2BC8D1CE,EAAcC,GAC5B,MAAmB,iBAAZA,EAGT,SAAgBC,EAAkBC,GAChC,MACE,YAAaA,GACb,aAAcA,GACd,mBAAoBA,GACpB,mBAAoBA,GACpB,wBAAyBA,GACzB,wBAAyBA,IACgB,eAAxCA,EAAgBC,qBAAgF,YAAxCD,EAAgBC,qBAI7E,SAAgBC,EAAMC,GACpB,MAAe,QAARA,EAGT,SAAgBC,EAAUC,GACxB,MAAO,uBAAwBA,mBChG/B,SAAAC,EAA0CC,GAAAhD,KAAAgD,WAAAA,EAS5C,OAPE7D,OAAAyB,eAAWmC,EAAAnD,UAAA,YAAS,KAApB,WACE,OAAOqD,EAAAA,kBAAkBjD,KAAKgD,6CAGhC7D,OAAAyB,eAAWmC,EAAAnD,UAAA,WAAQ,KAAnB,WACE,OAAOsD,EAAAA,iBAAiBlD,KAAKgD,+GAPjBG,EAAAA,OAAMC,KAAA,CAACC,EAAAA,kBADVN,EAAe9C,EAAA,CAD3BqD,EAAAA,aAEeC,EAAAA,EAAAJ,EAAAA,OAAOE,EAAAA,+CADVN,mBCJX,SAAAS,EACUC,GAAAzD,KAAAyD,UAAAA,EASZ,OANSD,EAAA5D,UAAA8D,kBAAP,WACE,OAAI1D,KAAKyD,UAAUE,UACVC,SAEF,6CAPYb,KAFVS,EAAWvD,EAAA,CADvBqD,EAAAA,oCAGsBP,KAFVS,mBCCX,SAAAK,EACUJ,GAAAzD,KAAAyD,UAAAA,EASZ,OANSI,EAAAjE,UAAAkE,gBAAP,WACE,OAAI9D,KAAKyD,UAAUE,UACVI,OAEF,6CAPYhB,KAFVc,EAAS5D,EAAA,CADrBqD,EAAAA,oCAGsBP,KAFVc,mBCgBX,SAAAG,EACUD,EACAH,EACAH,GAFAzD,KAAA+D,OAAAA,EACA/D,KAAA4D,SAAAA,EACA5D,KAAAyD,UAAAA,EATFzD,KAAAiE,OAAkC,IAAIC,EAAAA,gBAAwB,CACpElC,OAAO,EACPmC,QAAQ,EACRC,SAAS,IA+Db,OAtDSJ,EAAApE,UAAAyE,SAAP,WAEE,OADArE,KAAKsE,OACEtE,KAAKiE,OAAOM,gBAGdP,EAAApE,UAAA4E,QAAP,WACE,OAAOxE,KAAKiE,OAAOQ,WAAWN,QAGzBH,EAAApE,UAAA0E,KAAP,WAAA,IAAAI,EAAA1E,KACE,IAAIA,KAAKyD,UAAUkB,SAGnB,GAAI3E,KAAK+D,OAAOD,kBAAkBjE,eAAe,UAC/CG,KAAKiE,OAAOxC,KAAK,CACfO,OAAO,EACPmC,QAAQ,EACRC,SAAS,SAGX,IAAKpE,KAAKiE,OAAOQ,WAAWN,SAAWnE,KAAKiE,OAAOQ,WAAWL,QAAS,CACrEpE,KAAKiE,OAAOxC,KAAIvC,EAAA,GACXc,KAAKiE,OAAOQ,WAAU,CACzBL,SAAS,KAGX,IAAMQ,EAAS5E,KAAK4D,SACjBF,oBACAmB,cAAc,UACjBD,EAAOE,KAAO,kBACdF,EAAOG,OAAQ,EACfH,EAAOI,OAAQ,EACfJ,EAAOK,IAAM,4BAEbL,EAAOM,OAAS,WACdR,EAAKT,OAAOxC,KAAK,CACfO,OAAO,EACPmC,QAAQ,EACRC,SAAS,KAIbQ,EAAOO,QAAU,WACfT,EAAKT,OAAOxC,KAAK,CACfO,OAAO,EACPmC,QAAQ,EACRC,SAAS,KAIbpE,KAAK4D,SAASF,oBAAoB0B,KAAKC,YAAYT,8CAvDvCf,SACEL,SACCT,KAVViB,EAAmB/D,EAAA,CAD/BqD,EAAAA,oCASmBO,EACEL,EACCT,KAVViB,mBC2BX,SAAAsB,EAC0ClF,EACRmF,EACxBC,EACAzB,EACAN,GAJgCzD,KAAAI,IAAAA,EACRJ,KAAAuF,QAAAA,EACxBvF,KAAAwF,OAAAA,EACAxF,KAAA+D,OAAAA,EACA/D,KAAAyD,UAAAA,EARHzD,KAAAyF,eAA0C,IAAIC,EAAAA,cAC7C1F,KAAA2F,OAAmB,GASzB3F,KAAK4F,UAAU5F,KAAKI,IAAKJ,KAAKuF,SAC3BM,KAAKC,EAAAA,KAAK,IACVC,WAAU,eA+GjB,OA5GST,EAAA1F,UAAAgG,UAAP,SAAiBxF,EAAamF,GAA9B,IAAAb,EAAA1E,KACQgG,EAAMhG,KAAKwF,OAAOnB,WAAWwB,KACjCI,EAAAA,QAAO,SAAChC,GAAmB,OAAkB,IAAlBA,EAAOE,UAClC+B,EAAAA,KAAI,WACF,GAAKxB,EAAKX,OAAOD,kBAAjB,CAGA,IAAMqC,EAAUzB,EAAKX,OAAOD,kBAA0BqC,OAKtD,OAJI/F,IACFsE,EAAKiB,OAASJ,EAAWY,EAAO/F,EAAKmF,GAAyBY,EAAO/F,GACrEsE,EAAKe,eAAehE,KAAKiD,EAAKiB,SAEzBjB,EAAKiB,WAEdS,EAAAA,cACAC,EAAAA,YAGF,OADAL,EAAID,YACGC,GAGFV,EAAA1F,UAAA0G,SAAP,SAAgBf,GAAhB,IAAAb,EAAA1E,KACE,OAAOA,KAAKyF,eAAeI,KAAKK,EAAAA,KAAI,WAAM,OAAAxB,EAAKiB,OAAOW,SAASf,QAG1DD,EAAA1F,UAAA2G,YAAP,SACEC,EACAC,GAEA,OAAInE,EAAckE,IAAMhE,EAAkBiE,GACjCC,EAAAA,KAAe1G,KAAK2F,OAAOY,YAAYC,EAAGC,KACxC9D,EAAM6D,IAAM3D,EAAU4D,GACxBC,EAAAA,KAAe1G,KAAK2F,OAAOY,YAAYC,EAAGC,MAM9CnB,EAAA1F,UAAA+G,eAAP,SAAsBpB,GAAtB,IAAAb,EAAA1E,KACE,OAAOA,KAAKyF,eAAeI,KAAKK,EAAAA,KAAI,WAAM,OAAAxB,EAAKiB,OAAOgB,eAAepB,QAGhED,EAAA1F,UAAAgH,gBAAP,SACEC,EACAC,EACAC,GAEA,OAAOL,EAAAA,KAAe1G,KAAK2F,OAAOiB,gBAAgBC,EAAcC,EAASC,KAGpEzB,EAAA1F,UAAAoH,kBAAP,SACEH,EACAC,EACAC,GAEA,OAAOL,EAAAA,KAAe1G,KAAK2F,OAAOqB,kBAAkBH,EAAcC,EAASC,KAGtEzB,EAAA1F,UAAAqH,iBAAP,SAAwBJ,GACtB,OAAOH,EAAAA,KAAe1G,KAAK2F,OAAOsB,iBAAiBJ,KAG9CvB,EAAA1F,UAAAsH,qBAAP,SACEL,EACAC,EACAK,GAEA,OAAOT,EAAAA,KAAe1G,KAAK2F,OAAOuB,qBAAqBL,EAAcC,EAASK,KAGzE7B,EAAA1F,UAAAwH,mBAAP,SACEP,EACAQ,EACA9B,GAEA,OAAOmB,EAAAA,KAAe1G,KAAK2F,OAAOyB,mBAAmBP,EAAcQ,EAAM9B,KAGpED,EAAA1F,UAAA0H,sBAAP,SAA6BT,GAC3B,OAAOH,EAAAA,KAAe1G,KAAK2F,OAAO2B,sBAAsBT,KAGnDvB,EAAA1F,UAAA2H,oBAAP,SAA2BV,GACzB,OAAOH,EAAAA,KAAe1G,KAAK2F,OAAO4B,oBAAoBV,KAGjDvB,EAAA1F,UAAA4H,mBAAP,SACEX,EACAC,EACAK,GAEA,OAAOT,EAAAA,KAAe1G,KAAK2F,OAAO6B,mBAAmBX,EAAcC,EAASK,KAGvE7B,EAAA1F,UAAA6H,aAAP,SAAoBjB,EAAyBC,GAC3C,OAAIxE,EAAauE,GACRE,EAAAA,KAAe1G,KAAK2F,OAAO8B,aAAajB,IAE1CE,EAAAA,KAAe1G,KAAK2F,OAAO8B,aAAajB,EAAcC,KAGxDnB,EAAA1F,UAAA8H,eAAP,SAAsBC,GACpB,OAAOjB,EAAAA,KAAe1G,KAAK2F,OAAO+B,eAAeC,KAG5CrC,EAAA1F,UAAAgI,oBAAP,SAA2BC,GACzB,OAAOnB,EAAAA,KAAe1G,KAAK2F,OAAOiC,oBAAoBC,uEArHrD1E,EAAAA,OAAMC,KAAA,CAACjB,qCACPgB,EAAAA,OAAMC,KAAA,CAACf,YACQ2B,SACAH,SACGd,KATVuC,EAAarF,EAAA,CADzBqD,EAAAA,aAMIC,EAAAA,EAAAJ,EAAAA,OAAOhB,IACPoB,EAAAA,EAAAJ,EAAAA,OAAOd,yCACQ2B,EACAH,EACGd,KATVuC,mBCFX,SAAAwC,EAAoBC,GAAA/H,KAAA+H,cAAAA,EACH/H,KAAAgI,OAAS,IAAIC,EAAAA,aAoBbjI,KAAAkI,sBAAwB,IAAID,EAAAA,aAI5BjI,KAAAmI,qBAAuB,IAAIF,EAAAA,aAI3BjI,KAAAoI,OAAS,IAAIH,EAAAA,aAEvBjI,KAAAqI,MAAO,EAGNrI,KAAAsI,QAAU,IAAIpE,EAAAA,gBAA2C,IACzDlE,KAAAuI,SAAW,IAAI7C,EAAAA,cACf1F,KAAAwI,iBAAmB,IAAItE,EAAAA,gBAAiC,IAExDlE,KAAAyI,UAAY,IAAIC,EAAAA,QAChB1I,KAAA2I,WAAY,EACZ3I,KAAA4I,SAAU,EAmFpB,OA9IEzJ,OAAAyB,eAAYkH,EAAAlI,UAAA,UAAO,KAAnB,SAAoBiJ,GAClB7I,KAAKuI,SAAS9G,KAAKoH,oCAIrB1J,OAAAyB,eAAWkH,EAAAlI,UAAA,kBAAe,KAA1B,SAA2BiJ,GACzB7I,KAAKwI,iBAAiB/G,KAAKoH,oCAI7B1J,OAAAyB,eAAWkH,EAAAlI,UAAA,SAAM,KAAjB,SAAkBiJ,GAChB7I,KAAKsI,QAAQ7G,KAAKoH,oCAIpB1J,OAAAyB,eAAWkH,EAAAlI,UAAA,WAAQ,KAAnB,SAAoBkJ,GAClB9I,KAAKyI,UAAUhH,KAAKqH,oCAiDtBhB,EAAAlI,UAAAmJ,SAAA,WAAA,IAAArE,EAAA1E,KACEA,KAAKgJ,UAAYhJ,KAAKwI,iBAAiBjE,eAAesB,KACpDoD,EAAAA,WAAU,SAAA1D,GACR,OAAOb,EAAKqD,cAAczB,SAASf,OAGvCvF,KAAKkJ,SAAWlJ,KAAKuI,SAAShE,eAAesB,KAC3CoD,EAAAA,WAAU,SAAA1D,GACR,OAAOb,EAAKqD,cAAcpB,eAAepB,OAI7CvF,KAAKyI,UAAU1C,WAAU,SAAAoD,GACnBzE,EAAK0E,YACHD,EACFzE,EAAK0E,UAAUD,SAAS,WAExBzE,EAAK0E,UAAUD,SAAS,aAKhCrB,EAAAlI,UAAAyJ,gBAAA,WAAA,IAAA3E,EAAA1E,KACEsJ,EAAAA,cAActJ,KAAKkJ,SAAUlJ,KAAKgJ,UAAWhJ,KAAKuI,SAAUvI,KAAKsI,SAASvC,WACxE,SAACwD,OAAAC,EAAA5H,EAAA2H,EAAA,GAAC5C,EAAA6C,EAAA,GAAgBlD,EAAAkD,EAAA,GAAUjE,EAAAiE,EAAA,GAASC,EAAAD,EAAA,GACnC,GAAI9E,EAAKgF,gBAAkBhF,EAAKiE,UAAW,CACzCjE,EAAKiF,gBAAkBhD,EACvBjC,EAAKiE,WAAY,EACjB,IAAMiB,EAAUtD,EAASuD,OAAO,uBAAwB,CACtDlD,eAAcA,EACdmD,MAAO,CACLC,qBAAoB7K,EAAA,GAAOuK,MAI/B/E,EAAK2D,MAAO,EACZ1B,EAAeqD,iBAAiBC,MAAK,SAAAC,GAC/BA,EACFN,EAAQO,MAAMzF,EAAKgF,cAAcU,eAEjC1F,EAAK2D,MAAO,KAGhB1B,EAAe0D,GAAG,yBAAyB,SAAAC,GACzC5F,EAAKwD,sBAAsBqC,KAAKD,MAElC3D,EAAe0D,GAAG,wBAAwB,SAAAC,GACxC5F,EAAKyD,qBAAqBoC,KAAKD,MAEjC3D,EAAe0D,GAAG,SAAS,SAAAC,GACzB5F,EAAKsD,OAAOuC,KAAKD,GACjB5F,EAAKkE,SAAU,KAEjBjC,EAAe0D,GAAG,iBAAiB,SAAAC,GACjC5F,EAAKsD,OAAOuC,KAAKD,MAEnB3D,EAAe0D,GAAG,UAAU,SAAAC,GAC1B5F,EAAKsD,OAAOuC,KAAKD,MAEnB3D,EAAe0D,GAAG,UAAU,SAAAC,GAC1B5F,EAAK0D,OAAOmC,KAAKD,GACjB5F,EAAKkE,SAAU,KAEjBjC,EAAe0D,GAAG,SAAS,WACzB3F,EAAKkE,SAAU,UAERlE,EAAKiE,YAAcjE,EAAKkE,SACjClE,EAAKiF,gBAAgBa,OAAO,CAC1BC,SAAUlF,EAAQkF,SAClBC,MAAOnF,EAAQmF,MACfC,aAAcpF,EAAQoF,aACtBC,gBAAiBrF,EAAQqF,+DArHAtF,KAnBnCuF,EAAAA,CADCC,EAAAA,6FAMDD,EAAAA,CADCC,EAAAA,qGAMDD,EAAAA,CADCC,EAAAA,4FAMDD,EAAAA,CADCC,EAAAA,gGAMSD,EAAAA,CAATE,EAAAA,+DAoBSF,EAAAA,CAATE,EAAAA,8EAISF,EAAAA,CAATE,EAAAA,6EAISF,EAAAA,CAATE,EAAAA,+DAIwCF,EAAAA,CAAxCG,EAAAA,UAAU,UAAW,CAAEC,QAAQ,oBAAiCC,EAAAA,iDAtDtDpD,EAAuB7H,EAAA,CAJnCkL,EAAAA,UAAU,CACTC,SAAU,sBACVC,SAAU,4EAuByB/F,KArBxBwC,mBCaX,SAAAwD,EAAoBvD,GAAA/H,KAAA+H,cAAAA,EACH/H,KAAAgI,OAAS,IAAIC,EAAAA,aACbjI,KAAAmJ,SAAW,IAAIlB,EAAAA,aACfjI,KAAAgC,MAAQ,IAAIiG,EAAAA,aACbjI,KAAAuL,aAAmC,CAAC,QAK5CvL,KAAAuI,SAAW,IAAIrE,EAAAA,gBAAgC,IAC/ClE,KAAAwI,iBAAmB,IAAItE,EAAAA,gBAAiC,IAuElE,OA1FE/E,OAAAyB,eAAY0K,EAAA1L,UAAA,UAAO,KAAnB,SAAoBiJ,GAClB7I,KAAKuI,SAAS9G,KAAKoH,oCAIrB1J,OAAAyB,eAAW0K,EAAA1L,UAAA,kBAAe,KAA1B,SAA2BiJ,GACzB7I,KAAKwI,iBAAiB/G,KAAKoH,oCAetByC,EAAA1L,UAAAyJ,gBAAP,WAAA,IAAA3E,EAAA1E,KACQgJ,EAAkChJ,KAAKwI,iBAAiBjE,eAAesB,KAC3EoD,EAAAA,WAAU,SAAA1D,GACR,OAAIpG,OAAOqM,KAAKjG,GAAS7F,OAAS,EACzBgF,EAAKqD,cAAczB,SAASf,GAE9Bb,EAAKqD,cAAczB,eAG1B6C,EAAW,GACfsC,EAAAA,cACEzC,EACAhJ,KAAKuI,SAAShE,eAAesB,KAAKI,EAAAA,QAAO,SAAAV,GAAW,OAAAmG,QAAQnG,QAC5DQ,WAAU,SAACwD,WAAAoC,EAAA/J,EAAA2H,EAAA,GAACjD,EAAAqF,EAAA,GAAUpG,EAAAoG,EAAA,GAEtB,GADAjH,EAAK4B,SAAW,GACZ5B,EAAKkH,KAAM,gBACF9G,SACHgC,EAAUR,EAASuD,OAAO/E,EAAMS,GACtC4D,EAAQjK,EAAA,GACHiK,IAAQI,EAAA,IACVzE,GAAOgC,EAAOyC,KAG6B,IAA1C,CAAC,OAAQ,cAAcsC,QAAQ/G,KACjCJ,EAAKoH,YAAchF,GAErB,IAAMiF,EAAUrH,EAAKkH,KAAKxB,cAAc4B,cAAc,IAAIlH,GAE1DgC,EAAQqD,MAAM4B,GAEdjF,EAAQuD,GAAG,UAAU,SAAA4B,GACnB,IAAIC,EAAaD,EAAY9C,SAC7B,IAAK,IAAM/I,KAAO+I,EAChB,GAAIA,EAAU,CACZ,IAAMzH,EAAQyH,EAAS/I,GACnBA,IAAQ6L,EAAYE,aAAgBzK,EAAM0K,YAC5CF,GAAa,GAInBxH,EAAKsD,OAAOuC,KAAK,CACfqB,KAAMK,EACN3F,SAAU5B,EAAK4B,SACfxB,KAAMmH,EAAYE,YAClBhD,SAAU+C,EACVpF,QAASA,IAEPoF,GACFxH,EAAKyE,SAASoB,KAAK,CACjBqB,KAAMK,EACN3F,SAAU5B,EAAK4B,SACfxB,KAAMmH,EAAYE,YAClBhD,SAAU+C,EACVpF,QAASA,IAGTmF,EAAYjK,OACd0C,EAAK1C,MAAMuI,KAAK0B,EAAYjK,UAGhC0C,EAAK4B,SVsCR,WACH,IAAK,IAAIxE,EAAK,GAAIvC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CuC,EAAKA,EAAGuK,OAAOzK,EAAOnC,UAAUF,KACpC,OAAOuC,EUzCYwK,CAAO5H,EAAK4B,SAAQ,CAAEQ,SA5CrC,IAAmB,IAAAyF,EAAAC,EAAA9H,EAAK6G,cAAYkB,EAAAF,EAAA9K,QAAAgL,EAAA9K,KAAA8K,EAAAF,EAAA9K,OAAA,GAArBgL,EAAA/K,+GAkDd4J,EAAA1L,UAAA8M,QAAP,WACE,OAAO1M,KAAK8L,sDA/EqBxG,KATnCuF,EAAAA,CADCC,EAAAA,6FAMDD,EAAAA,CADCC,EAAAA,qGAMSD,EAAAA,CAATE,EAAAA,+DACSF,EAAAA,CAATE,EAAAA,iEACSF,EAAAA,CAATE,EAAAA,8DACQF,EAAAA,CAARC,EAAAA,wBAA6B6B,2CAEQ9B,EAAAA,CAArCG,EAAAA,UAAU,OAAQ,CAAEC,QAAQ,oBAAuBC,EAAAA,wCAjBzCI,EAAmBrL,EAAA,CAR/BkL,EAAAA,UAAU,CACTC,SAAU,kBACVC,SAAU,+IAiByB/F,KAXxBgG,mBCMb,SAAAsB,WAqBA,SArBaA,EACGA,EAAAC,QAAd,SAAsBC,EAAwBvH,GAC5C,MAAO,CACLwH,SAAUC,EACVC,UAAW,CACTjJ,EACAsB,EACAvC,EACAc,EACAL,EACA,CACE0J,QAAS/K,EACTgL,SAAUL,GAEZ,CACEI,QAAS7K,EACT8K,SAAU5H,MAhBPqH,EAAeI,EAAA/M,EAAA,CAL3BmN,EAAAA,SAAS,CACRC,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACjC,EAAqBxD,GACpC0F,QAAS,CAAClC,EAAqBxD,MAEpB8E","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Error, Address } from './utils';\n\nexport interface Source {\n  id: string;\n  object: 'source';\n  amount: number;\n  client_secret: string;\n  code_verification?: {\n    attempts_remaining: number;\n    status: 'pending' | 'succeded' | 'failed';\n  };\n  created: number;\n  currency: string;\n  flow: FlowTypes;\n  livemode: boolean;\n  metadata: { [key: string]: any };\n  owner: {\n    address: Address;\n    email: string;\n    name: string;\n    phone: string;\n    verified_address: Address;\n    verified_email: string;\n    verified_name: string;\n    verified_phone: string;\n  };\n  receiver: {\n    address: string;\n    amount_charged: number;\n    amount_received: number;\n    amount_returned: number;\n    redirect?: {\n      return_url: string;\n      status: 'pending' | 'succeeded' | 'failed';\n      url: string;\n    };\n  };\n  status: 'canceled' | 'chargeable' | 'consumed' | 'failed' | 'pending';\n  type:\n    | 'card'\n    | 'three_d_secure'\n    | 'giropay'\n    | 'sepa_bit'\n    | 'ideal'\n    | 'sofort'\n    | 'bancontact';\n  usage: UsageTypes;\n}\n\nexport type UsageTypes = 'reusable' | 'single_use';\nexport type FlowTypes = 'redirect' | 'receiver' | 'code_verification' | 'none';\n\nexport interface SourceParams {\n  id: string;\n  client_secret: string;\n}\n\nexport interface SourceData {\n  type?: string;\n  amount?: number;\n  currency?: string;\n  flow?: FlowTypes;\n  metadata?: { [key: string]: any };\n  owner?: {\n    address?: Address;\n    email?: string;\n    name?: string;\n    phone?: string;\n  };\n  redirect?: {\n    [key: string]: any;\n    return_url: string;\n  };\n  token?: string;\n  usage?: UsageTypes;\n}\n\nexport function isSourceData(sourceData: any): sourceData is SourceData {\n  return 'type' in sourceData;\n}\n\nexport interface SourceResult {\n  source?: Source;\n  error?: Error;\n}\n","import { PaymentMethodParams, PaymentMethodResult } from './payment-method';\nimport { InjectionToken } from '@angular/core';\nimport { Element, RequestElementOptions } from './element';\nimport { Elements, ElementsOptions } from './elements';\nimport { SourceData, SourceParams, SourceResult } from './sources';\nimport {\n  BankAccount,\n  BankAccountData,\n  CardDataOptions,\n  CardPaymentData,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmCardPaymentResult,\n  ConfirmIntentData,\n  ConfirmSetupIntentData,\n  Pii,\n  PiiData,\n  SetupIntentData,\n  SetupIntentResult,\n  TokenResult\n} from './token';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>('Stripe Publishable Key');\nexport const STRIPE_OPTIONS = new InjectionToken<Options>('Stripe Options');\n\nexport interface StripeJS {\n  elements(options?: ElementsOptions): Elements;\n  createToken(el: Element, cardData?: CardDataOptions): Promise<TokenResult>;\n  createToken(account: BankAccount, bankAccountData: BankAccountData): Promise<TokenResult>;\n  createToken(pii: Pii, piiData: PiiData): Promise<TokenResult>;\n  createSource(el: Element, sourceData?: SourceData): Promise<SourceResult>;\n  createSource(sourceData: SourceData): Promise<SourceResult>;\n  paymentRequest(options: RequestElementOptions);\n  handleCardSetup(clientSecret: string, el: Element, cardSetupOptions?: SetupIntentData): Promise<SetupIntentResult>;\n  handleCardAction(clientSecret: string);\n  handleCardPayment(clientSecret: string, el: Element, data: CardPaymentData);\n  confirmPaymentIntent(clientSecret: string, el: Element, data: ConfirmIntentData);\n  confirmCardPayment(clientSecret: string, data: ConfirmCardPaymentData, options: ConfirmCardPaymentOptions): Promise<ConfirmCardPaymentResult>;\n  retrievePaymentIntent(clientSecret: string);\n  confirmSetupIntent(clientSecret: string, el: Element, data: ConfirmSetupIntentData);\n  retrieveSetupIntent(clientSecret: string);\n  retrieveSource(source: SourceParams): Promise<SourceResult>;\n  createPaymentMethod(paymentMethod: PaymentMethodParams): Promise<PaymentMethodResult>;\n}\n\nexport interface Options {\n  stripeAccount?: string;\n}\n","import { Error } from './utils';\nimport { PaymentMethodParams } from './payment-method';\n\nexport interface Token {\n  id: string;\n  object: 'token';\n  bank_account?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'bank_account';\n    account_holder_name: string;\n    account_holder_type: 'individual' | 'company';\n    bank_name: string;\n    last4: string;\n    routing_number: string;\n    status: 'new' | 'validated' | 'verified' | 'verification_failded' | 'errored';\n  };\n  card?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'card';\n    address_city: string;\n    address_country: string;\n    address_line1: string;\n    address_line1_check: FieldCheck;\n    address_line2: string;\n    address_state: string;\n    address_zip: string;\n    address_zip_check: FieldCheck;\n    brand: string;\n    cvc_check: FieldCheck;\n    dynamic_last4: string;\n    exp_month: number;\n    exp_year: number;\n    funding: 'credit' | 'debit' | 'prepaid' | 'unknown';\n    last4: string;\n    metadata: { [key: string]: any };\n    name: string;\n    tokenization_method: 'apple_pay' | 'android_pay';\n  };\n  client_ip: string;\n  livemode: boolean;\n  type: 'card' | 'bank_account';\n  used: boolean;\n}\n\nexport type FieldCheck = 'pass' | 'fail' | 'unavailable' | 'unchecked';\n\nexport interface CardDataOptions {\n  name?: string;\n  address_line1?: string;\n  address_line2?: string;\n  address_city?: string;\n  address_state?: string;\n  address_zip?: string;\n  address_country?: string;\n  currency?: string;\n}\n\nexport interface TokenResult {\n  token?: Token;\n  error?: Error;\n}\n\nexport type BankAccount = 'bank_account';\n\nexport interface BankAccountData {\n  country: string;\n  currency: string;\n  routing_number: string;\n  account_number: string;\n  account_holder_name: string;\n  account_holder_type: 'individual' | 'company';\n}\n\nexport type Pii = 'pii';\n\nexport interface PiiData {\n  personal_id_number: string;\n}\n\nexport function isBankAccount(account: any): account is BankAccount {\n  return account === 'bank_account';\n}\n\nexport function isBankAccountData(bankAccountData: any): bankAccountData is BankAccountData {\n  return (\n    'country' in bankAccountData &&\n    'currency' in bankAccountData &&\n    'routing_number' in bankAccountData &&\n    'account_number' in bankAccountData &&\n    'account_holder_name' in bankAccountData &&\n    'account_holder_type' in bankAccountData &&\n    (bankAccountData.account_holder_type === 'individual' || bankAccountData.account_holder_type === 'company')\n  );\n}\n\nexport function isPii(pii: any): pii is Pii {\n  return pii === 'pii';\n}\n\nexport function isPiiData(piiData: any): piiData is PiiData {\n  return 'personal_id_number' in piiData;\n}\n\nexport interface SetupIntent {\n  id: string;\n  object: 'setup_intent';\n  application?: string;\n  cancellation_reason?: 'abandoned' | 'requested_by_customer' | 'duplicate';\n  client_secret?: string;\n  created: number;\n  customer?: string;\n  description?: string;\n  last_setup_error?: Error;\n  livemode: boolean;\n  metadata: { [key: string]: any };\n  next_action: {\n    type: 'redirect_to_url' | 'use_stripe_sdk';\n    redirect_to_url?: {\n      return_url: string;\n      url: string;\n    };\n    use_stripe_sdk: { [key: string]: any };\n  };\n  on_behalf_of?: string;\n  payment_method?: string;\n  payment_method_options?: { [key: string]: any };\n  status:\n    | 'requires_payment_method'\n    | 'requires_confirmation'\n    | 'requires_action'\n    | 'processing'\n    | 'canceled'\n    | 'succeeded';\n  usage: 'on_session' | 'off_session';\n}\n\nexport interface SetupIntentResult {\n  setupIntent?: SetupIntent;\n  error?: Error;\n}\n\nexport interface SetupIntentData {\n  payment_method_data?: {\n    billing_details?: BillingDetails;\n  };\n}\n\nexport interface BillingDetails {\n  address?: Address;\n  email?: string;\n  name?: string;\n  phone?: string;\n}\n\nexport interface ConfirmIntentData {\n  payment_method_data?: {\n    billing_details?: BillingDetails;\n    return_url?: string;\n    shipping?: Shipping;\n    save_payment_method?: boolean;\n    setup_future_usage?: string;\n  };\n}\n\nexport interface Shipping {\n  address: {\n    city?: string;\n    country?: string;\n    line1?: string;\n    line2?: string;\n    postal_code?: string;\n    state?: string;\n  };\n  name: string;\n  carrier?: string;\n  phone?: string;\n  tracking_number?: string;\n}\n\nexport interface ConfirmSetupIntentData {\n  payment_method_data?: {\n    billing_details?: BillingDetails;\n    return_url?: string;\n  };\n}\n\nexport interface Address {\n  city?: string;\n  country?: string;\n  line1?: string;\n  line2?: string;\n  postal_code?: string;\n  state?: string;\n}\n\nexport interface ShippingOptions {\n  id: string;\n  label: string;\n  detail: string;\n  amount: number;\n}\n\nexport interface ShippingAddress {\n  country?: string;\n  addressLine?: string;\n  region?: string;\n  city?: string;\n  postalCode?: string;\n  recipient?: string;\n  phone?: string;\n  sortingCode?: string;\n  dependentLocality?: string;\n}\n\nexport interface PaymentIntent {\n  id: string;\n  object: 'payment_intent';\n  amount: number;\n  amount_capturable: number;\n  amount_received: number;\n  application?: string;\n  application_fee_ammount?: number;\n  canceled_at?: number;\n  cancellation_reason?: 'abandoned' | 'requested_by_customer' | 'duplicate';\n  cancelled_method?: 'automatic' | 'manual';\n  capture_method?: 'automatic' | 'manual';\n  charges?: Array<{\n    object: 'list';\n    data: Array<any>;\n    has_more: boolean;\n    url: string;\n  }>;\n  client_secret?: string;\n  confirmation_method?: 'automatic' | 'manual';\n  create: number;\n  currency?: string;\n  customer?: any;\n  description?: string;\n  invoice?: string;\n  last_payment_error?: any;\n  livemode: boolean;\n  metadata?: any;\n  next_action?: any;\n  on_behalf_of?: string;\n  payment_method?: string;\n  payment_method_options?: any;\n  payment_method_types?: Array<string>;\n  receipt_email?: string;\n  review?: string;\n  setup_feture_usage?: string;\n  shipping?: Shipping;\n  statement_descriptor?: string;\n  statement_descriptor_suffix?: string;\n  status:\n    | 'requires_payment_method'\n    | 'requires_confirmation'\n    | 'requires_action'\n    | 'processing'\n    | 'requires_capture'\n    | 'canceled'\n    | 'succeeded';\n  transfer_data?: any;\n  transfer_group?: string;\n}\n\nexport interface PaymentIntentResult {\n  paymentIntent?: PaymentIntent;\n  error?: Error;\n}\n\nexport interface CardPaymentData {\n  payment_method_data?: {\n    billing_details?: BillingDetails;\n  };\n  shipping?: Shipping;\n  receipt_email?: string;\n  save_payment_method?: boolean;\n  setup_future_usage?: string;\n}\n\nexport interface ConfirmCardPaymentData {\n  payment_method?: PaymentMethodParams | string;\n  shipping?: Shipping;\n  return_url?: string;\n  receipt_email?: string;\n  save_payment_method?: boolean;\n  setup_future_usage?: boolean;\n}\n\nexport interface ConfirmCardPaymentOptions {\n  handleActions?: boolean;\n}\n\nexport interface ConfirmCardPaymentResult {\n  paymentIntent?: PaymentIntent;\n  error?: Error;\n}\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\nexport interface IPlatformService {\n  isBrowser: boolean;\n  isServer: boolean;\n}\n\n@Injectable()\nexport class PlatformService implements IPlatformService {\n  constructor( @Inject(PLATFORM_ID) private platformId: any) { }\n\n  public get isBrowser(): boolean {\n    return isPlatformBrowser(this.platformId);\n  }\n\n  public get isServer(): boolean {\n    return isPlatformServer(this.platformId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PlatformService } from './platform.service';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(\n    private _platform: PlatformService\n  ) {}\n\n  public getNativeDocument(): Document {\n    if (this._platform.isBrowser) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PlatformService } from './platform.service';\n\n@Injectable()\nexport class WindowRef {\n  constructor(\n    private _platform: PlatformService\n  ) {}\n\n  public getNativeWindow(): Window {\n    if (this._platform.isBrowser) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { DocumentRef } from './document-ref.service';\nimport { PlatformService } from './platform.service';\nimport { WindowRef } from './window-ref.service';\n\nexport interface Status {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  private status: BehaviorSubject<Status> = new BehaviorSubject<Status>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    private window: WindowRef,\n    private document: DocumentRef,\n    private _platform: PlatformService\n  ) {}\n\n  public asStream(): Observable<Status> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (this._platform.isServer) {\n      return;\n    }\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else {\n      if (!this.status.getValue().loaded && !this.status.getValue().loading) {\n        this.status.next({\n          ...this.status.getValue(),\n          loading: true\n        });\n\n        const script = this.document\n          .getNativeDocument()\n          .createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.src = 'https://js.stripe.com/v3/';\n\n        script.onload = () => {\n          this.status.next({\n            error: false,\n            loaded: true,\n            loading: false\n          });\n        };\n\n        script.onerror = () => {\n          this.status.next({\n            error: true,\n            loaded: false,\n            loading: false\n          });\n        };\n\n        this.document.getNativeDocument().body.appendChild(script);\n      }\n    }\n  }\n}\n","import { PaymentMethodParams, PaymentMethodResult } from './../interfaces/payment-method';\ndeclare var Stripe;\n\nimport { Inject, Injectable } from '@angular/core';\nimport { from as observableFrom, Observable, ReplaySubject } from 'rxjs';\nimport { filter, map, publishLast, refCount, take } from 'rxjs/operators';\nimport { Element, RequestElementOptions } from '../interfaces/element';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { isSourceData, SourceData, SourceParams, SourceResult } from '../interfaces/sources';\nimport { Options, StripeJS, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from '../interfaces/stripe';\nimport {\n  BankAccount,\n  BankAccountData,\n  CardDataOptions,\n  CardPaymentData,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmCardPaymentResult,\n  ConfirmIntentData,\n  ConfirmSetupIntentData,\n  isBankAccount,\n  isBankAccountData,\n  isPii,\n  isPiiData,\n  PaymentIntentResult,\n  Pii,\n  PiiData,\n  SetupIntentData,\n  SetupIntentResult,\n  TokenResult\n} from '../interfaces/token';\nimport { LazyStripeAPILoader, Status } from './api-loader.service';\nimport { PlatformService } from './platform.service';\nimport { WindowRef } from './window-ref.service';\n\n@Injectable()\nexport class StripeService {\n  public stripeChanged$: ReplaySubject<StripeJS> = new ReplaySubject();\n  private stripe: StripeJS = {} as StripeJS;\n\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) private key: string,\n    @Inject(STRIPE_OPTIONS) private options: Options,\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private _platform: PlatformService\n  ) {\n    this.changeKey(this.key, this.options)\n      .pipe(take(1))\n      .subscribe(() => {});\n  }\n\n  public changeKey(key: string, options?: Options): Observable<StripeJS | undefined> {\n    const obs = this.loader.asStream().pipe(\n      filter((status: Status) => status.loaded === true),\n      map(() => {\n        if (!this.window.getNativeWindow()) {\n          return;\n        }\n        const Stripe = (this.window.getNativeWindow() as any).Stripe;\n        if (key) {\n          this.stripe = options ? (Stripe(key, options) as StripeJS) : (Stripe(key) as StripeJS);\n          this.stripeChanged$.next(this.stripe);\n        }\n        return this.stripe;\n      }),\n      publishLast(),\n      refCount()\n    );\n    obs.subscribe();\n    return obs;\n  }\n\n  public elements(options?: ElementsOptions): Observable<Elements> {\n    return this.stripeChanged$.pipe(map(() => this.stripe.elements(options)));\n  }\n\n  public createToken(\n    a: Element | BankAccount | Pii,\n    b: CardDataOptions | BankAccountData | PiiData | undefined\n  ): Observable<TokenResult> {\n    if (isBankAccount(a) && isBankAccountData(b)) {\n      return observableFrom(this.stripe.createToken(a, b));\n    } else if (isPii(a) && isPiiData(b)) {\n      return observableFrom(this.stripe.createToken(a, b));\n    } else {\n      return observableFrom(this.stripe.createToken(a as Element, b as CardDataOptions | undefined));\n    }\n  }\n\n  public paymentRequest(options: RequestElementOptions): Observable<Element> {\n    return this.stripeChanged$.pipe(map(() => this.stripe.paymentRequest(options)));\n  }\n\n  public handleCardSetup(\n    clientSecret: string,\n    element: Element,\n    cardSetupOptions?: SetupIntentData | undefined\n  ): Observable<SetupIntentResult> {\n    return observableFrom(this.stripe.handleCardSetup(clientSecret, element, cardSetupOptions));\n  }\n\n  public handleCardPayment(\n    clientSecret: string,\n    element: Element,\n    cardSetupOptions?: CardPaymentData | undefined\n  ): Observable<PaymentIntentResult> {\n    return observableFrom(this.stripe.handleCardPayment(clientSecret, element, cardSetupOptions));\n  }\n\n  public handleCardAction(clientSecret: string): Observable<PaymentIntentResult> {\n    return observableFrom(this.stripe.handleCardAction(clientSecret));\n  }\n\n  public confirmPaymentIntent(\n    clientSecret: string,\n    element: Element,\n    intentOptions?: ConfirmIntentData | undefined\n  ): Observable<SetupIntentResult> {\n    return observableFrom(this.stripe.confirmPaymentIntent(clientSecret, element, intentOptions));\n  }\n\n  public confirmCardPayment(\n    clientSecret: string,\n    data: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions | undefined\n  ): Observable<ConfirmCardPaymentResult> {\n    return observableFrom(this.stripe.confirmCardPayment(clientSecret, data, options));\n  }\n\n  public retrievePaymentIntent(clientSecret: string): Observable<PaymentIntentResult> {\n    return observableFrom(this.stripe.retrievePaymentIntent(clientSecret));\n  }\n\n  public retrieveSetupIntent(clientSecret: string): Observable<SetupIntentResult> {\n    return observableFrom(this.stripe.retrieveSetupIntent(clientSecret));\n  }\n\n  public confirmSetupIntent(\n    clientSecret: string,\n    element: Element,\n    intentOptions?: ConfirmSetupIntentData | undefined\n  ): Observable<SetupIntentResult> {\n    return observableFrom(this.stripe.confirmSetupIntent(clientSecret, element, intentOptions));\n  }\n\n  public createSource(a: Element | SourceData, b?: SourceData | undefined): Observable<SourceResult> {\n    if (isSourceData(a)) {\n      return observableFrom(this.stripe.createSource(a as SourceData));\n    }\n    return observableFrom(this.stripe.createSource(a as Element, b));\n  }\n\n  public retrieveSource(source: SourceParams): Observable<SourceResult> {\n    return observableFrom(this.stripe.retrieveSource(source));\n  }\n\n  public createPaymentMethod(paymentMethod: PaymentMethodParams): Observable<PaymentMethodResult> {\n    return observableFrom(this.stripe.createPaymentMethod(paymentMethod));\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { PaymentRequestButtonStyle, RequestElementOptions, UpdateDetails } from './interfaces/element';\nimport { ElementsOptions } from './interfaces/elements';\nimport { Source } from './interfaces/sources';\nimport { ShippingAddress, ShippingOptions, Token } from './interfaces/token';\nimport { StripeService } from './services/stripe.service';\n\n@Component({\n  selector: 'ngx-payment-request',\n  template: '<div #request [style.display-none]=\"hide\"></div>'\n})\nexport class PaymentRequestComponent implements OnInit, AfterViewInit {\n  @Input()\n  private set options(optionsIn: RequestElementOptions) {\n    this.options$.next(optionsIn);\n  }\n\n  @Input()\n  public set elementsOptions(optionsIn: ElementsOptions) {\n    this.elementsOptions$.next(optionsIn);\n  }\n\n  @Input()\n  public set styles(optionsIn: PaymentRequestButtonStyle) {\n    this.styles$.next(optionsIn);\n  }\n\n  @Input()\n  public set complete(success: boolean) {\n    this.complete$.next(success);\n  }\n\n  constructor(private stripeService: StripeService) {}\n  @Output() public change = new EventEmitter<{\n    token?: Token;\n    paymentMethod?: PaymentMethodData;\n    source?: Source;\n    complete: (\n      status:\n        | 'success'\n        | 'fail'\n        | 'invalid_payer_name'\n        | 'invalid_payer_phone'\n        | 'invalid_payer_email'\n        | 'invalid_shipping_address'\n    ) => {};\n    payerName?: string;\n    payerEmail?: string;\n    payerPhone?: string;\n    shippingAddress?: ShippingAddress;\n    shippingOption?: ShippingOptions;\n    methodName?: string;\n  }>();\n  @Output() public shippingAddressChange = new EventEmitter<{\n    updateWith: (updateDetails: UpdateDetails) => {};\n    shippingAddress: ShippingAddress;\n  }>();\n  @Output() public shippingOptionChange = new EventEmitter<{\n    updateWith: (updateDetails: UpdateDetails) => {};\n    shippingOption: ShippingOptions;\n  }>();\n  @Output() public cancel = new EventEmitter<any>();\n\n  public hide = false;\n\n  @ViewChild('request', { static: false }) private requestButton?: ElementRef;\n  private styles$ = new BehaviorSubject<PaymentRequestButtonStyle>({});\n  private options$ = new ReplaySubject<RequestElementOptions>();\n  private elementsOptions$ = new BehaviorSubject<ElementsOptions>({});\n  private lastEvent: any;\n  private complete$ = new Subject<boolean>();\n  private _attached = false;\n  private _opened = false;\n  private _paymentRequest: any;\n\n  private elements$: Observable<any>;\n  private request$: Observable<any>;\n\n  ngOnInit() {\n    this.elements$ = this.elementsOptions$.asObservable().pipe(\n      switchMap(options => {\n        return this.stripeService.elements(options);\n      })\n    );\n    this.request$ = this.options$.asObservable().pipe(\n      switchMap(options => {\n        return this.stripeService.paymentRequest(options);\n      })\n    );\n\n    this.complete$.subscribe(complete => {\n      if (this.lastEvent) {\n        if (complete) {\n          this.lastEvent.complete('success');\n        } else {\n          this.lastEvent.complete('fail');\n        }\n      }\n    });\n  }\n  ngAfterViewInit(): void {\n    combineLatest(this.request$, this.elements$, this.options$, this.styles$).subscribe(\n      ([paymentRequest, elements, options, styles]) => {\n        if (this.requestButton && !this._attached) {\n          this._paymentRequest = paymentRequest;\n          this._attached = true;\n          const element = elements.create('paymentRequestButton', {\n            paymentRequest,\n            style: {\n              paymentRequestButton: { ...styles }\n            }\n          });\n\n          this.hide = false;\n          paymentRequest.canMakePayment().then(result => {\n            if (result) {\n              element.mount(this.requestButton.nativeElement);\n            } else {\n              this.hide = true;\n            }\n          });\n          paymentRequest.on('shippingaddresschange', event => {\n            this.shippingAddressChange.emit(event);\n          });\n          paymentRequest.on('shippingoptionchange', event => {\n            this.shippingOptionChange.emit(event);\n          });\n          paymentRequest.on('token', event => {\n            this.change.emit(event);\n            this._opened = false;\n          });\n          paymentRequest.on('paymentmethod', event => {\n            this.change.emit(event);\n          });\n          paymentRequest.on('source', event => {\n            this.change.emit(event);\n          });\n          paymentRequest.on('cancel', event => {\n            this.cancel.emit(event);\n            this._opened = false;\n          });\n          paymentRequest.on('click', () => {\n            this._opened = true;\n          });\n        } else if (this._attached && !this._opened) {\n          this._paymentRequest.update({\n            currency: options.currency,\n            total: options.total,\n            displayItems: options.displayItems,\n            shippingOptions: options.shippingOptions\n          });\n        }\n      }\n    );\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { BehaviorSubject, combineLatest as observableCombineLatest, Observable } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { Element as StripeElement, ElementOptions, ElementType } from './interfaces/element';\nimport { Elements, ElementsOptions } from './interfaces/elements';\nimport { StripeService } from './services/stripe.service';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `\n    <div class=\"field\" #card>\n      <div [class]=\"type\" *ngFor=\"let type of elementTypes\"></div>\n    </div>\n  `\n})\nexport class StripeCardComponent implements AfterViewInit {\n  @Input()\n  private set options(optionsIn: ElementOptions) {\n    this.options$.next(optionsIn);\n  }\n\n  @Input()\n  public set elementsOptions(optionsIn: ElementsOptions) {\n    this.elementsOptions$.next(optionsIn);\n  }\n\n  constructor(private stripeService: StripeService) {}\n  @Output() public change = new EventEmitter<{ card: any; element: StripeElement }>();\n  @Output() public complete = new EventEmitter<{ card: any; element: StripeElement }>();\n  @Output() public error = new EventEmitter<any>();\n  @Input() public elementTypes: Array<ElementType> = ['card'];\n\n  @ViewChild('card', { static: false }) private card: ElementRef;\n  private cardElement?: StripeElement;\n  private elements?: Array<StripeElement>;\n  private options$ = new BehaviorSubject<ElementOptions>({});\n  private elementsOptions$ = new BehaviorSubject<ElementsOptions>({});\n\n  public ngAfterViewInit(): void {\n    const elements$: Observable<Elements> = this.elementsOptions$.asObservable().pipe(\n      switchMap(options => {\n        if (Object.keys(options).length > 0) {\n          return this.stripeService.elements(options);\n        }\n        return this.stripeService.elements();\n      })\n    );\n    let complete = {};\n    observableCombineLatest(\n      elements$,\n      this.options$.asObservable().pipe(filter(options => Boolean(options)))\n    ).subscribe(([elements, options]) => {\n      this.elements = [];\n      if (this.card) {\n        for (const type of this.elementTypes) {\n          const element = elements.create(type, options);\n          complete = {\n            ...complete,\n            [type]: element\n          };\n\n          if (['card', 'cardNumber'].indexOf(type) !== -1) {\n            this.cardElement = element;\n          }\n          const mountTo = this.card.nativeElement.querySelector(`.${type}`);\n\n          element.mount(mountTo);\n\n          element.on('change', changedCard => {\n            let isComplete = changedCard.complete;\n            for (const key in complete) {\n              if (complete) {\n                const value = complete[key];\n                if (key !== changedCard.elementType && !value._complete) {\n                  isComplete = false;\n                }\n              }\n            }\n            this.change.emit({\n              card: changedCard,\n              elements: this.elements,\n              type: changedCard.elementType,\n              complete: isComplete,\n              element: element\n            } as any);\n            if (isComplete) {\n              this.complete.emit({\n                card: changedCard,\n                elements: this.elements,\n                type: changedCard.elementType,\n                complete: isComplete,\n                element: element\n              } as any);\n            }\n            if (changedCard.error) {\n              this.error.emit(changedCard.error);\n            }\n          });\n          this.elements = [...this.elements, element];\n        }\n      }\n    });\n  }\n\n  public getCard(): StripeElement | undefined {\n    return this.cardElement;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Options, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from './interfaces/stripe';\nimport { PaymentRequestComponent } from './payment-request.component';\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { DocumentRef } from './services/document-ref.service';\nimport { PlatformService } from './services/platform.service';\nimport { StripeService } from './services/stripe.service';\nimport { WindowRef } from './services/window-ref.service';\nimport { StripeCardComponent } from './stripe-card.component';\n\nexport interface NgxStripeModuleOptions {\n  publishableKey?: string;\n  options?: Options;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StripeCardComponent, PaymentRequestComponent],\n  exports: [StripeCardComponent, PaymentRequestComponent]\n})\nexport class NgxStripeModule {\n  public static forRoot(publishableKey: string, options?: Options): ModuleWithProviders {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        PlatformService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n"]}