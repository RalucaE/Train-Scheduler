import { AfterViewInit, EventEmitter, OnInit } from '@angular/core';
import { PaymentRequestButtonStyle, UpdateDetails } from './interfaces/element';
import { ElementsOptions } from './interfaces/elements';
import { Source } from './interfaces/sources';
import { ShippingAddress, ShippingOptions, Token } from './interfaces/token';
import { StripeService } from './services/stripe.service';
export declare class PaymentRequestComponent implements OnInit, AfterViewInit {
    private stripeService;
    private options;
    elementsOptions: ElementsOptions;
    styles: PaymentRequestButtonStyle;
    complete: boolean;
    constructor(stripeService: StripeService);
    change: EventEmitter<{
        token?: Token;
        paymentMethod?: PaymentMethodData;
        source?: Source;
        complete: (status: "fail" | "success" | "invalid_shipping_address" | "invalid_payer_name" | "invalid_payer_phone" | "invalid_payer_email") => {};
        payerName?: string;
        payerEmail?: string;
        payerPhone?: string;
        shippingAddress?: ShippingAddress;
        shippingOption?: ShippingOptions;
        methodName?: string;
    }>;
    shippingAddressChange: EventEmitter<{
        updateWith: (updateDetails: UpdateDetails) => {};
        shippingAddress: ShippingAddress;
    }>;
    shippingOptionChange: EventEmitter<{
        updateWith: (updateDetails: UpdateDetails) => {};
        shippingOption: ShippingOptions;
    }>;
    cancel: EventEmitter<any>;
    hide: boolean;
    private requestButton?;
    private styles$;
    private options$;
    private elementsOptions$;
    private lastEvent;
    private complete$;
    private _attached;
    private _opened;
    private _paymentRequest;
    private elements$;
    private request$;
    ngOnInit(): void;
    ngAfterViewInit(): void;
}
