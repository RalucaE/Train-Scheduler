import { PaymentMethodParams, PaymentMethodResult } from './payment-method';
import { InjectionToken } from '@angular/core';
import { Element, RequestElementOptions } from './element';
import { Elements, ElementsOptions } from './elements';
import { SourceData, SourceParams, SourceResult } from './sources';
import { BankAccount, BankAccountData, CardDataOptions, CardPaymentData, ConfirmCardPaymentData, ConfirmCardPaymentOptions, ConfirmCardPaymentResult, ConfirmIntentData, ConfirmSetupIntentData, Pii, PiiData, SetupIntentData, SetupIntentResult, TokenResult } from './token';
export declare const STRIPE_PUBLISHABLE_KEY: InjectionToken<string>;
export declare const STRIPE_OPTIONS: InjectionToken<Options>;
export interface StripeJS {
    elements(options?: ElementsOptions): Elements;
    createToken(el: Element, cardData?: CardDataOptions): Promise<TokenResult>;
    createToken(account: BankAccount, bankAccountData: BankAccountData): Promise<TokenResult>;
    createToken(pii: Pii, piiData: PiiData): Promise<TokenResult>;
    createSource(el: Element, sourceData?: SourceData): Promise<SourceResult>;
    createSource(sourceData: SourceData): Promise<SourceResult>;
    paymentRequest(options: RequestElementOptions): any;
    handleCardSetup(clientSecret: string, el: Element, cardSetupOptions?: SetupIntentData): Promise<SetupIntentResult>;
    handleCardAction(clientSecret: string): any;
    handleCardPayment(clientSecret: string, el: Element, data: CardPaymentData): any;
    confirmPaymentIntent(clientSecret: string, el: Element, data: ConfirmIntentData): any;
    confirmCardPayment(clientSecret: string, data: ConfirmCardPaymentData, options: ConfirmCardPaymentOptions): Promise<ConfirmCardPaymentResult>;
    retrievePaymentIntent(clientSecret: string): any;
    confirmSetupIntent(clientSecret: string, el: Element, data: ConfirmSetupIntentData): any;
    retrieveSetupIntent(clientSecret: string): any;
    retrieveSource(source: SourceParams): Promise<SourceResult>;
    createPaymentMethod(paymentMethod: PaymentMethodParams): Promise<PaymentMethodResult>;
}
export interface Options {
    stripeAccount?: string;
}
